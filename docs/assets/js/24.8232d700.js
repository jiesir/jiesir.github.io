(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{380:function(s,t,a){"use strict";a.r(t);var e=a(42),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"bem命名法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bem命名法"}},[s._v("#")]),s._v(" BEM命名法")]),s._v(" "),a("p",[s._v("BEM命名法，是对css命名的一种规范，将页面模块化，隔离样式，提高代码的复用性，减少后期的维护成本。BEM的意思就是Block(块)、Element(元素)、modifier(修饰符)，通过双下划线__或者双中划--链接。")]),s._v(" "),a("h2",{attrs:{id:"使用bem命名法的好处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用bem命名法的好处"}},[s._v("#")]),s._v(" 使用BEM命名法的好处")]),s._v(" "),a("h3",{attrs:{id:"样式隔离-避免css样式污染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样式隔离-避免css样式污染"}},[s._v("#")]),s._v(" 样式隔离, 避免css样式污染")]),s._v(" "),a("p",[s._v("css样式污染的根本原因，是因为css没有作用域。BEM通过特殊的命名方式，给css创造一个“作用域”，就能有效避免css样式全局污染。例如,给输入框命名")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*普通*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".base input")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*BEM命名法*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".base-input__inner")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("普通的命名法, 会作用于所有class='base' 的后代元素。 本来你只想给当前元素加样式，结果不小心影响了其他元素，这就是样式污染。\nBEM命名法，只会作用于class='base-input__inner'的元素, 达到样式隔离。 不会影响其他元素。")]),s._v(" "),a("h3",{attrs:{id:"代码更易覆盖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码更易覆盖"}},[s._v("#")]),s._v(" 代码更易覆盖")]),s._v(" "),a("p",[s._v("使用css-module打包后是这个样子")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".base-input-sdFh3sxLwo5uer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("无法用css精确选择组件，因为.base-input后面的hash值是动态的。")]),s._v(" "),a("h3",{attrs:{id:"代码更易读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码更易读"}},[s._v("#")]),s._v(" 代码更易读")]),s._v(" "),a("p",[s._v("可读性更高")]),s._v(" "),a("h2",{attrs:{id:"什么是bem命名法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是bem命名法"}},[s._v("#")]),s._v(" 什么是BEM命名法")]),s._v(" "),a("p",[s._v("BEM其实是块（block）、元素（element）、修饰符（modifier）的缩写，利用不同的块，功能以及样式来给元素命名。这三个部分使用__与--连接（这里用两个而不是一个是为了留下用于块的命名）。命名约定的模式如下：")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".block")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".block__element")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".block--modifier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("ul",[a("li",[a("strong",[a("code",[s._v("block")]),s._v("代表更高级别的抽象或组件")])]),s._v(" "),a("li",[a("strong",[a("code",[s._v("block__element")]),s._v("代表"),a("code",[s._v("block")]),s._v("的后代，用于形成一个完整的"),a("code",[s._v("block")]),s._v("的整体")])]),s._v(" "),a("li",[a("strong",[a("code",[s._v("block--modifier")]),s._v("代表"),a("code",[s._v("block")]),s._v("的不同状态或不同版本")])])]),s._v(" "),a("h3",{attrs:{id:"常用规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用规范"}},[s._v("#")]),s._v(" 常用规范")]),s._v(" "),a("p",[s._v("1.blockelementmodifier包含多个单词时, 用一个中划线-链接,例如")]),s._v(" "),a("p",[s._v("2.el-dropdown-menuel-button")]),s._v(" "),a("p",[s._v("3.block和element用双下划线__链接, 例如")]),s._v(" "),a("p",[s._v("4.表单项 form__item")]),s._v(" "),a("p",[s._v("5.导航项 menu__item")]),s._v(" "),a("p",[s._v("6.element和modifier用双中划线--链接, 如表示按钮的不同状态,例如")]),s._v(" "),a("p",[s._v("7.默认：el-button--default")]),s._v(" "),a("p",[s._v("8.成功：el-button--success")]),s._v(" "),a("p",[s._v("9.用js控制样式时,css命名用is-开头,例如is-success、is-failed、is-disabled")]),s._v(" "),a("h3",{attrs:{id:"常用的元素名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用的元素名"}},[s._v("#")]),s._v(" 常用的元素名")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("表单元素 "),a("code",[s._v("form form-item input select radio checkbox switch rate datePicker")])])]),s._v(" "),a("li",[a("strong",[s._v("导航元素 "),a("code",[s._v("nav subnav menu tab")])])]),s._v(" "),a("li",[a("strong",[s._v("提示 "),a("code",[s._v("alert message messageBox notification")])])]),s._v(" "),a("li",[a("strong",[s._v("数据展示 "),a("code",[s._v("table process tree pagiantion")])])]),s._v(" "),a("li",[a("strong",[s._v("其他 "),a("code",[s._v("button icon")])])])]),s._v(" "),a("h2",{attrs:{id:"如何使用bem命名法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用bem命名法"}},[s._v("#")]),s._v(" 如何使用BEM命名法")]),s._v(" "),a("h3",{attrs:{id:"页面命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面命名"}},[s._v("#")]),s._v(" 页面命名")]),s._v(" "),a("p",[s._v("用"),a("code",[s._v("page-")]),s._v("开头, "),a("code",[s._v("page")]),s._v("表示这是一个页面, 而不是组件。 给页面命名时，BEM可以搭配css-module一起使用。既能保证打包后选择器的唯一，又容易调试。")]),s._v(" "),a("p",[s._v("页面中的选择器，都嵌套在页面根选择器内(.page-xxx), 保证所有样式, 只作用于当前页面。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".page-header")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".page-header__inner")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"公共组件命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#公共组件命名"}},[s._v("#")]),s._v(" 公共组件命名")]),s._v(" "),a("p",[s._v("用"),a("code",[s._v("base")]),s._v("-开头, "),a("code",[s._v("base")]),s._v("表示公共组件。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*选择器避免嵌套，降低选择器权重*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".base-input")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".base-input__inner")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"局部组件命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局部组件命名"}},[s._v("#")]),s._v(" 局部组件命名")]),s._v(" "),a("p",[s._v("用"),a("code",[s._v("the")]),s._v("-开头, "),a("code",[s._v("the")]),s._v("表示某一特定的组件。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".the-header")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".the-header__title")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".the-header__desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("局部组件的每一个class名，带上组件的作用域前缀,如"),a("code",[s._v("the-header__title")]),s._v("的作用域前缀是"),a("code",[s._v("the-header")]),s._v("。")]),s._v(" "),a("p",[s._v("局部组件，也不宜嵌套， 降低选择器权重。")]),s._v(" "),a("p",[s._v("局部组件也可以搭配css-module一起用，因为局部组件只给少数特定页面使用，修改样式，可以在组件内部直接修改。")]),s._v(" "),a("h3",{attrs:{id:"命名语义化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名语义化"}},[s._v("#")]),s._v(" 命名语义化")]),s._v(" "),a("p",[s._v("通常，可以根据模块的功能而命名，如页面头部"),a("code",[s._v("header")]),s._v("、导航栏"),a("code",[s._v("nav")]),s._v("、主体"),a("code",[s._v("main")]),s._v("、侧边栏"),a("code",[s._v("sidebar")]),s._v("、底部"),a("code",[s._v("footer")]),s._v("等，这样整个页面看起来就比较清晰了，维护起来也比较方便。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*bad*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".fl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".fr")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*good*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*左浮动*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".is-float-left")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*右浮动*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".is-float-right")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("上面的代码, "),a("code",[s._v("fl")]),s._v("、"),a("code",[s._v("fr")]),s._v("之类的命名，表达意思不够清晰，要知道具体的含义，还得去看代码。 而"),a("code",[s._v("is-float-left")]),s._v(", 就表达得非常清晰。")]),s._v(" "),a("h3",{attrs:{id:"使用-class-类-选择器-避免使用-id、标签、伪类-选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-class-类-选择器-避免使用-id、标签、伪类-选择器"}},[s._v("#")]),s._v(" 使用 class(类) 选择器, 避免使用 id、标签、伪类 选择器")]),s._v(" "),a("p",[s._v("标签、伪类 等选择器范围太广，不具有“作用域”的作用，会污染全局样式。例如，下面的代码中，"),a("code",[s._v(".the-header a")]),s._v(" 选择器会选中"),a("code",[s._v("the-header")]),s._v("所有后代元素"),a("code",[s._v("<a></a>")])]),s._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("the-header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])])]),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*bad*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".the-header a")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"覆盖第三方组件样式时-重新起一个class名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#覆盖第三方组件样式时-重新起一个class名"}},[s._v("#")]),s._v(" 覆盖第三方组件样式时，重新起一个class名")]),s._v(" "),a("p",[s._v("使用原来的class名修改样式，可能会不小心影响了后代组件的样式。为了消除这个隐患，可以重新起一个class名，只作用于当前组件。例如修改ant-design的输入框组件样式")]),s._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("className")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("the-form"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("Input")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("className")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("the-input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])])]),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*bad 会影响the-form 后代的所有输入框*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".the-form .ant-input")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*good 只会只用于className='the-input'的输入框*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".the-form .the-input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);